@page
@model RazorPagesCrud.Pages.Funcionarios.AddModel
@{
    var message = ViewData["Message"]?.ToString();
}

<form method="post" class="needs-validation" novalidate>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="mb-3">Adicione um novo funcionário</h1>
        <a href="/Funcionarios/list" class="btn btn-primary">Voltar</a>
    </div>

    @if (!string.IsNullOrWhiteSpace(message))
    {
        <div class="alert alert-success" role="alert">
            @message
        </div>
    }

    <div class="mb-3">
        <label class="form-label">Nome</label>
        <input type="text" class="form-control" asp-for="AddFuncionarioRequest.Name" required>
        <div class="invalid-feedback">Por favor, preencha o campo Nome.</div>
    </div>

    <div class="mb-3">
        <label class="form-label">Email</label>
        <input type="email" class="form-control" asp-for="AddFuncionarioRequest.Email" required>
        <div class="invalid-feedback">Por favor, preencha um email válido.</div>
    </div>

    <div class="mb-3">
        <label class="form-label">Salario</label>
        <input type="number" class="form-control" asp-for="AddFuncionarioRequest.Salary" required>
        <div class="invalid-feedback">Por favor, preencha o campo Salario.</div>
    </div>

    <div class="mb-3">
        <label class="form-label">Data de Nascimento</label>
        <input type="date" class="form-control" asp-for="AddFuncionarioRequest.DateOfBirth" required>
        <div class="invalid-feedback">Por favor, preencha a Data de Nascimento.</div>
    </div>

    <div class="mb-3">
        <label class="form-label">Departamento</label>
        <input type="text" class="form-control" asp-for="AddFuncionarioRequest.Departament" required>
        <div class="invalid-feedback">Por favor, preencha o campo Departamento.</div>
    </div>

    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</form>

<script>
    // Validação do lado do cliente usando JavaScript
    (function () {
        'use strict';
        // Obtém todos os formulários que precisam de validação
        var forms = document.querySelectorAll('.needs-validation');

        // Loop através dos formulários e previne o envio vazio
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>